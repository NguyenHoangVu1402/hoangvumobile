(function(n, t, i) {
    function f(t, r) {
        function v() {
            f.elem.children().css("margin", 0).children().css("margin", 0);
            f.elem.css({
                position: "relative",
                height: f.opts.height,
                overflow: "hidden"
            });
            f.targ.css({
                position: "absolute",
                margin: 0
            });
            l(!1)
        }

        function o() {
            f.opts.autoplay && c()
        }

        function c() {
            f.timer == 0 && (f.timer = setInterval(function() {
                h(f.opts.direction)
            }, f.opts.interval), n(f.opts.controls.toggle).addClass("et-run").html(f.opts.controls.stopText))
        }

        function e() {
            clearInterval(f.timer);
            f.timer = 0;
            n(f.opts.controls.toggle).removeClass("et-run").html(f.opts.controls.playText)
        }

        function h(n) {
            var i, r, u, t, e;
            f.moving || f.elem.is(":visible") && (n == "up" ? (i = ":first-child", r = "-=", u = "appendTo") : (i = ":last-child", r = "+=", u = "prependTo"), t = f.targ.children(i), e = t.outerHeight(), typeof f.opts.callbacks.before == "function" && f.opts.callbacks.before.call(f, f.targ, t), f.moving = !0, f.targ.stop(!0, !0).animate({
                top: r + e + "px"
            }, f.opts.speed, f.opts.easing, function() {
                t.hide()[u](f.targ).fadeIn();
                f.targ.css("top", 0);
                l(!0);
                f.moving = !1;
                typeof f.opts.callbacks.after == "function" && f.opts.callbacks.after.call(f, f.targ, t)
            }))
        }

        function s(n) {
            e();
            n == "up" ? h("up") : h("down")
        }

        function y() {
            var t = 0,
                i = f.elem.css("display");
            f.elem.css("display", "block");
            f.targ.children().each(function() {
                t += n(this).outerHeight()
            });
            f.elem.css({
                display: i,
                height: t
            })
        }

        function p(t) {
            var i = 0,
                r = "et-item-visible";
            f.targ.children().removeClass(r);
            f.targ.children(":lt(" + f.opts.visible + ")").each(function() {
                i += n(this).outerHeight();
                n(this).addClass(r)
            });
            t ? f.elem.stop(!0, !0).animate({
                height: i
            }, f.opts.speed, function() {
                a()
            }) : f.elem.css("height", i)
        }

        function l(n) {
            f.opts.height == "auto" && (f.opts.visible > 0 ? p(n) : y());
            n || a()
        }

        function w() {
            var n, t;
            typeof i.hidden != "undefined" ? (n = "hidden", t = "visibilitychange") : typeof i.msHidden != "undefined" ? (n = "msHidden", t = "msvisibilitychange") : typeof i.webkitHidden != "undefined" && (n = "webkitHidden", t = "webkitvisibilitychange");
            i.addEventListener(t, function() {
                i[n] ? e() : o()
            }, !1)
        }

        function a() {
            typeof f.opts.callbacks.finish == "function" && f.opts.callbacks.finish.call(f, f.targ)
        }
        var f = this;
        if (f.opts = n.extend({}, u, r), f.elem = n(t), f.targ = n(t).children(":first-child"), f.timer = 0, f.moving = !1, v(), o(), w(), f.opts.mousePause) f.elem.on("mouseenter", function() {
            f.timerTemp = f.timer;
            e()
        }).on("mouseleave", function() {
            f.timerTemp !== 0 && o()
        });
        n(f.opts.controls.up).on("click", function(n) {
            n.preventDefault();
            s("up")
        });
        n(f.opts.controls.down).on("click", function(n) {
            n.preventDefault();
            s("down")
        });
        n(f.opts.controls.toggle).on("click", function(n) {
            n.preventDefault();
            f.timer == 0 ? o() : e()
        });
        return {
            up: function() {
                s("up")
            },
            down: function() {
                s("down")
            },
            start: c,
            stop: e,
            options: f.opts
        }
    }
    var r = "easyTicker",
        u = {
            direction: "up",
            easing: "swing",
            speed: "slow",
            interval: 2e3,
            height: "auto",
            visible: 0,
            mousePause: !0,
            autoplay: !0,
            controls: {
                up: "",
                down: "",
                toggle: "",
                playText: "Play",
                stopText: "Stop"
            },
            callbacks: {
                before: !1,
                after: !1,
                finish: !1
            }
        };
    n.fn[r] = function(t) {
        return this.each(function() {
            n.data(this, r) || n.data(this, r, new f(this, t))
        })
    }
})(jQuery, window, document);